{"version":3,"sources":["Static sync /^/.*/$","Static/ceb/index.tsx","Static/en/index.tsx","Static/tl/index.tsx","serviceWorker.ts","Static/Static.tsx","Base.tsx","index.tsx"],"names":["map","./ceb/","./en/","./tl/","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","r","__webpack_exports__","d","get","home","back","ok","cancel","Boolean","window","location","hostname","match","current","msg","basepath","pathname","Languages","ceb","name","active","tl","en","es","de","cn","jpn","kor","getLink","path","parameters","scratch","entries","forEach","key","replace","concat","Paths","params","locale","split","length","shift","loc","join","Base","_Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","propUpdate","state","inherits","createClass","value","setState","langparam","param","alocale","find","blocale","base","assign","require","initLocale","history","lang","console","log","react_default","a","createElement","Link","to","Switch","Route","render","exact","Component","ReactDOM","HashRouter","Base_Base","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1b8c8a58.chunk.js","sourcesContent":["var map = {\n\t\"./ceb/\": 23,\n\t\"./en/\": 24,\n\t\"./tl/\": 25\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 22;","import { Messages } from '../Messages';\r\n\r\nexport const get: Messages = {\r\n    home: \"balay\",\r\n    back: \"balik\",\r\n    ok: \"gi\",\r\n    cancel: \"aylang\"\r\n}","import { Messages } from '../Messages';\r\n\r\nexport const get: Messages = {\r\n    home: \"home\",\r\n    back: \"back\",\r\n    ok: \"ok\",\r\n    cancel: \"cancel\"\r\n}","import { Messages } from '../Messages';\r\n\r\nexport const get: Messages = {\r\n    home: \"bahay\",\r\n    back: \"balik\",\r\n    ok: \"sige\",\r\n    cancel: \"huwag\"\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Messages } from \"./Messages\";\r\n\r\nexport type Locale = {\r\n    readonly  code    : string,\r\n    readonly  name    : string,\r\n    readonly  active  : boolean\r\n}\r\nexport const Languages = {\r\n   ceb: ()=> {return  {  code: \"ceb\",  name : \"Cebuano\",   active: true}},\r\n   tl:  ()=> {return  {  code: \"tl\",   name : \"Tagalog\",   active: true  }},\r\n   en:  ()=> {return  {  code: \"en\",   name : \"English\",   active: true  }},\r\n   es:  ()=> {return  {  code: \"es\",   name : \"Spanish\",   active: false  }},\r\n   de:  ()=> {return  {  code: \"de\",   name : \"German\",    active: false  }},\r\n   cn:  ()=> {return  {  code: \"cn\",   name : \"Chinese\",   active: false  }}, \r\n   jpn: ()=> {return  {  code: \"jpn\",  name : \"Japanese\",  active: false  }}, \r\n   kor: ()=> {return  {  code: \"kor\",  name : \"Korean\",    active: false  }},\r\n}\r\n\r\nexport var current: Locale, msg: Messages, basepath:string, pathname: string;\r\nexport const initLocale:(path:string, param?:string)=>void = (path,param) => {\r\n    const alocale = Object.entries(Languages).find((value) => value[1]().active);\r\n    const blocale = Object.entries(Languages).find((value) => value[1]().code === param && value[1]().active);\r\n    const locale: Locale | undefined =  blocale && blocale[1]() || alocale && alocale[1]();\r\n    const base  = locale && locale.code;\r\n    current     = Object.assign({},locale);\r\n    msg         = Object.assign({},require('./'+ (locale && locale.code) +'/').get);\r\n    basepath    = param === base ? `/${base}` : '';\r\n    pathname    = path;\r\n}\r\n\r\nconst getLink:(path: string, parameters?:{}) =>string = (path,parameters) => {\r\n    var scratch:string = path;\r\n    parameters && Object.entries(parameters).forEach((key)=>{\r\n        scratch = scratch.replace(`:${key[0]}`, `${key[1]}`);\r\n    });\r\n\r\n    return basepath + scratch;\r\n}\r\n\r\nexport const Paths = {\r\n    // USER ROUTES/LINK FUNCTIONS\r\n    blog:       (params?:{}) =>   {return getLink('/blog',params)},\r\n    about:      (params?:{}) =>   {return getLink('/about',params)},\r\n    contact:    (params?:{}) =>   {return getLink('/contact',params)},\r\n    admin:      (params?:{}) =>   {return getLink('/admin',params)},\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    // SPECIAL ROUTES/LINK FUNCTIONS\r\n    home:       (params?:{}) =>   {return getLink('/',params)},\r\n    // LOCALE CHANGER - DO NOT USE IN ROUTES\r\n    changelocale: (locale?:Locale) => {\r\n        const scratch:string[] = pathname.split('/');\r\n        if(scratch[1].length <= 3){\r\n           scratch[1] = scratch[1].replace(`${current.code}`,``); \r\n           if (pathname !== '/' && basepath !== ''){scratch.shift();}\r\n        }\r\n        const loc = locale && `/${locale.code}` || '';\r\n        return `${loc}${scratch.join('/')}`\r\n    },\r\n}\r\n","import React, { Component } from 'react';\nimport {Switch, Route, RouteComponentProps, Link, Redirect} from 'react-router-dom';\nimport {initLocale, Paths, Locale, current, msg, Languages, pathname} from \"./Static/Static\";\n\ntype Props = {} & RouteComponentProps;\ntype State = {locale: Locale};\nexport class Base extends Component<Props, State>{\n  constructor(props: RouteComponentProps) {\n    super(props);\n    this.propUpdate();\n    this.state = {locale: current}\n  }\n\n  componentDidUpdate(props:Props) {\n    if(this.props !== props){\n      this.propUpdate();\n      this.setState({locale: current});\n    }\n  }\n\n  propUpdate(){\n    const langparam: {lang?: string} = this.props.match.params;\n    initLocale(this.props.history.location.pathname, langparam.lang);\n    console.log(this.props.match);\n    console.log(Paths.home);\n  }\n\n  render(){\n    return (\n      <div>Welcome to Dino's Blog\n        <Link to={Paths.home()}replace>HOME</Link>\n        <Link to={Paths.about()} replace>ABOUT ME</Link>\n        <Link to={Paths.contact()} replace>CONTACT ME</Link>\n        <Link to={Paths.blog()} replace>BLOG</Link>\n        <Link to={Paths.changelocale(Languages.en())} replace>ENGLISH</Link>\n        <Link to={Paths.changelocale(Languages.ceb())} replace>CEBUANO</Link>\n        <Link to={Paths.changelocale(Languages.tl())} replace>TAGALOG</Link>\n        <Link to={Paths.changelocale()} replace>DEFAULT</Link>\n        <br/>{msg.home}\n        <br/>{msg.ok}\n        <br/>{msg.cancel}\n        <br/>{msg.back}\n      <Switch>\n        <Route path={Paths.about()} render={()=>{return <p>ABOUT</p>}}/>\n        <Route path={Paths.contact()}  render={()=>{return <p>CONTACT</p>}}/>\n        <Route path={Paths.blog()}  render={()=>{return <p>BLOG</p>}}/>\n        <Route path={Paths.admin()}  render={()=>{return <p>ADMIN</p>}}/>\n\n        <Route exact path={Paths.home()}  render={()=>{return <p>HOME</p>}}/>\n        <Route render={() => <p>NOT FOUND</p>}/>\n      </Switch>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { Base } from './Base';\n\nReactDOM.render(\n<HashRouter>\n    <Route path={\"/:lang?\"} render={(props) => <Base {...props}/>} />\n</HashRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}