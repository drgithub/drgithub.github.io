{"version":3,"sources":["Static sync /^/.*/$","Static/ceb/index.tsx","Static/en/index.tsx","Static/tl/index.tsx","serviceWorker.ts","Static/Static.tsx","Components/PageComponents/FrontPage.tsx","Base.tsx","index.tsx"],"names":["map","./ceb/","./en/","./tl/","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","r","__webpack_exports__","d","get","home","back","ok","cancel","Boolean","window","location","hostname","match","current","msg","basepath","pathname","search","Languages","en","name","active","ceb","tl","es","de","cn","jpn","kor","setPathName","newhistory","getLink","path","parameters","scratch","entries","forEach","key","replace","concat","Paths","params","locale","split","length","shift","loc","join","FrontPage","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","react_default","a","createElement","className","Link","to","props","children","Component","Base","_this","call","updateLocale","state","changes","cur","url","prev","matcha","console","log","history","setState","param","alocale","find","blocale","base","assign","require","initLocale","lang","Switch","Route","component","FrontPage_FrontPage","exact","render","ReactDOM","BrowserRouter","basename","process","Base_Base","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a41e984.chunk.js","sourcesContent":["var map = {\n\t\"./ceb/\": 23,\n\t\"./en/\": 24,\n\t\"./tl/\": 25\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 22;","import { Messages } from '../Messages';\r\n\r\nexport const get: Messages = {\r\n    home: \"balay\",\r\n    back: \"balik\",\r\n    ok: \"gi\",\r\n    cancel: \"aylang\"\r\n}","import { Messages } from '../Messages';\r\n\r\nexport const get: Messages = {\r\n    home: \"home\",\r\n    back: \"back\",\r\n    ok: \"ok\",\r\n    cancel: \"cancel\"\r\n}","import { Messages } from '../Messages';\r\n\r\nexport const get: Messages = {\r\n    home: \"bahay\",\r\n    back: \"balik\",\r\n    ok: \"sige\",\r\n    cancel: \"huwag\"\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Messages } from \"./Messages\";\r\nimport * as H from 'history';\r\n\r\nexport type Locale = {\r\n    readonly  code    : string,\r\n    readonly  name    : string,\r\n    readonly  active  : boolean\r\n}\r\nexport const Languages = {\r\n    en:  ()=> {return  {  code: \"en\",   name : \"English\",   active: true    }},\r\n    ceb: ()=> {return  {  code: \"ceb\",  name : \"Cebuano\",   active: true    }},\r\n    tl:  ()=> {return  {  code: \"tl\",   name : \"Tagalog\",   active: true    }},\r\n    es:  ()=> {return  {  code: \"es\",   name : \"Spanish\",   active: false   }},\r\n    de:  ()=> {return  {  code: \"de\",   name : \"German\",    active: false   }},\r\n    cn:  ()=> {return  {  code: \"cn\",   name : \"Chinese\",   active: false   }}, \r\n    jpn: ()=> {return  {  code: \"jpn\",  name : \"Japanese\",  active: false   }}, \r\n    kor: ()=> {return  {  code: \"kor\",  name : \"Korean\",    active: false   }},\r\n}\r\nexport var current: Locale, msg: Messages, basepath:string, pathname: string, search:string, history: H.History, urlBase: string = '/portfolio';\r\nexport const initLocale: (param?:string)=>void = (param) => {\r\n    const alocale = Object.entries(Languages).find((value) => value[1]().active);\r\n    const blocale = Object.entries(Languages).find((value) => value[1]().code === param && value[1]().active);\r\n    const locale: Locale | undefined =  blocale && blocale[1]() || alocale && alocale[1]();\r\n    const base  = locale && locale.code;\r\n    current     = Object.assign({},locale);\r\n    msg         = Object.assign({},require('./'+ (locale && locale.code) +'/').get);\r\n    basepath    = param === base ? `${urlBase}/${base}` : `${urlBase}`;\r\n}\r\nexport const setPathName: (newhistory: H.History)=> void = (newhistory) => {\r\n    history     = newhistory;\r\n    pathname    = newhistory.location.pathname;\r\n    search      = newhistory.location.search;\r\n}\r\nconst getLink:(path: string, parameters?:{}) => string = (path,parameters) => {\r\n    var scratch:string = path;\r\n    parameters && Object.entries(parameters).forEach((key)=>{\r\n        scratch = scratch.replace(`:${key[0]}`, `${key[1]}`);\r\n    });\r\n    return basepath + scratch;\r\n}\r\n\r\nexport const  Paths = {\r\n    // USER ROUTES/LINK FUNCTIONS\r\n    blog:       (params?:{}) =>   {return getLink('/blog',params)},\r\n    about:      (params?:{}) =>   {return getLink('/about',params)},\r\n    contact:    (params?:{}) =>   {return getLink('/contact',params)},\r\n    admin:      (params?:{}) =>   {return getLink('/admin',params)},\r\n\r\n    // SPECIAL ROUTES/LINK FUNCTIONS\r\n    home:       (params?:{}) =>   {return getLink('/',params)},\r\n\r\n    // LOCALE CHANGER - DO NOT USE IN ROUTES\r\n    changelocale: (locale?: Locale) => {\r\n        const scratch:string[] = pathname.split('/');\r\n        if(scratch[1].length <= 3){\r\n           scratch[1] = scratch[1].replace(`${current.code}`,``); \r\n           if (pathname !== '/' && basepath !== `${urlBase}`){scratch.shift();}\r\n        }\r\n        const loc = locale && `/${locale.code}` || '';\r\n        return `${loc}${scratch.join('/')}${search && search || ''}`;\r\n    },\r\n}\r\n\r\n","import React, { Component} from \"react\";\r\nimport { RouteComponentProps, Link } from \"react-router-dom\";\r\nimport { Paths, msg, Languages } from \"../../Static/Static\";\r\nexport class FrontPage extends Component<{children?: any & RouteComponentProps}>{\r\n    render() {\r\n        return (\r\n        <div className='sample'>Welcome to Dino's Blog\r\n            <Link to={Paths.home()}replace>HOME</Link>\r\n            <Link to={Paths.about()} replace>ABOUT ME</Link>\r\n            <Link to={Paths.contact()} replace>CONTACT ME</Link>\r\n            <Link to={Paths.blog()} replace>BLOG</Link>\r\n            <Link to={Paths.changelocale(Languages.en())} replace>ENGLISH</Link>\r\n            <Link to={Paths.changelocale(Languages.ceb())} replace>CEBUANO</Link>\r\n            <Link to={Paths.changelocale(Languages.tl())} replace>TAGALOG</Link>\r\n            <Link to={Paths.changelocale()} replace>DEFAULT</Link>\r\n            <br/>{msg.home}\r\n            <br/>{msg.ok}\r\n            <br/>{msg.cancel}\r\n            <br/>{msg.back}\r\n            {this.props.children}\r\n        </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Switch, Route, RouteComponentProps,} from 'react-router-dom';\r\nimport {initLocale, Paths, setPathName, msg,} from \"./Static/Static\";\r\nimport { FrontPage } from './Components/PageComponents/FrontPage';\r\n\r\nexport class Base extends Component<RouteComponentProps, {changes: boolean}>{\r\n  constructor(props: RouteComponentProps) {\r\n    super(props);\r\n    this.updateLocale();\r\n    this.state = {changes: true};\r\n  }\r\n\r\n  componentDidUpdate(props:RouteComponentProps) {\r\n    if (this.props !== props) {\r\n      const cur = this.props.match.url.split('/')[2];\r\n      const prev = props.match.url.split('/')[2];\r\n      const matcha = cur.length > 3 ? '' : cur;\r\n      const matchb = prev.length > 3 ? '' : prev;\r\n      if (matcha !== matchb) {\r\n        console.log('Updating Locale to', matcha === '' ? 'default' : matcha);\r\n        this.updateLocale();\r\n      } else\r\n      setPathName(this.props.history);\r\n      this.setState({changes: !this.state.changes});\r\n    }\r\n  }\r\n\r\n  updateLocale() {\r\n    const langparam: {lang?: string} = this.props.match.params;\r\n    initLocale(langparam.lang);\r\n    setPathName(this.props.history);\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.history, Paths.home());\r\n    return (\r\n      <Switch>\r\n        <Route path={Paths.about()} component={() => <FrontPage>ABOUT {msg.back}</FrontPage>}/>\r\n        <Route path={Paths.contact()} component={() => <FrontPage>CONTACT {msg.home}</FrontPage>}/>\r\n        <Route path={Paths.blog()}  component={() => <FrontPage>BLOG {msg.ok}</FrontPage>}/>\r\n        <Route path={Paths.admin()}component={() => <FrontPage>ADMIN {msg.home}</FrontPage>}/>\r\n\r\n        <Route exact path={Paths.home()} component={() => <FrontPage>HOME {msg.cancel}</FrontPage>}/>\r\n        <Route render={() => <p>NOT FOUND</p>}/>\r\n      </Switch>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { Base } from './Base';\r\n\r\nReactDOM.render(\r\n<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <Route path={\"/:lang?\"} render={(props) => <Base {...props}/>} />\r\n</BrowserRouter>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}